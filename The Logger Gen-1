# Workflow-Based Intelligence System  
**Name:** The Logger gen-1

The Logger Gen-1 always checks for a `PRD.md` (Project Requirements Document) at the start of every session. If it doesn't exist, you'll be prompted to create one using the template below.  
The logger also ensures all other workflow files are present, creating them if missing. This guarantees you never start work without project vision and context.

---

## ðŸš¨ If PRD.md is Missing: Use AI to Create It (Do This Outside Cursor!)

**Do NOT proceed until PRD.md exists.**

1. **Use ChatGPT (or any LLM) to get a high-level summary of your project:**
   - Paste your README, main code, or any available docs and ask:  
     _"Summarize the purpose, main features, and goals of this project."_

2. **Copy the summary to Claude (free version) and ask:**  
   _"Using this summary, create a Project Requirements Document (PRD) in markdown format with sections for Vision, Goals, Success Criteria, and Current Phase."_

3. **Review and edit the PRD draft to ensure it matches your project's intent.**

4. **Save the final version as `PRD.md` in your project root.**

5. **Only then proceed with the rest of the logger workflow.**

**Why?**  
- Cursor and most AI tools work best when a clear PRD is present.
- Creating the PRD outside Cursor ensures you have a strong, human-reviewed project vision before you start logging tasks or progress.

**Remember:**  
- The logger will not function as intended without a PRD.md.
- Always keep PRD.md up to date as your project evolves.

---

> This ensures every user, new or returning, always starts with a clear, AI-generated, and human-reviewed project vision!

---

## ðŸŽ¯ **The Flow Logic:**

1. **Check NEXT_TASK.md** â†’ What should I work on?
2. **Check TASK_TRACKER.md** â†’ Where did I leave off?
3. **Check PRD.md** â†’ Does current work align with vision?
4. **IF aligned** â†’ Execute next task
5. **IF misaligned** â†’ Check ERROR_LOGS.md + PROJECT_EVOLUTION.md to understand why
6. **Understand context** â†’ Plan â†’ Execute
7. **Update relevant files** based on what happened

---

## ðŸš€ **Quick Start (2 minutes)**

### **Step 1: Create Files**
```bash
touch NEXT_TASK.md TASK_TRACKER.md PRD.md ERROR_LOGS.md PROJECT_EVOLUTION.md PROJECT_FILES.md
```

### **Step 2: Start Your Workflow**
1. **Define your vision** in PRD.md
2. **Set your next task** in NEXT_TASK.md
3. **Track your progress** in TASK_TRACKER.md
4. **Follow the flow logic** above

---

## ðŸ“‹ **Core Files & Templates**

### **NEXT_TASK.md** - What Should I Work On?
```markdown
# Next Task

## Current Priority
**Task**: [What you're working on right now]
**Why**: [Why this is the priority]
**Expected Outcome**: [What success looks like]
**Tags:** [tag1, tag2, tag3]

## Queue
- [ ] [Next task 1] **Tags:** [tag1, tag2]
- [ ] [Next task 2] **Tags:** [tag1, tag2]
- [ ] [Next task 3] **Tags:** [tag1, tag2]

## Blocked By
- [Any blockers preventing progress]

---
*Update this whenever you complete a task or priorities change.*
```

### **TASK_TRACKER.md** - Where Did I Leave Off?
```markdown
# Task Tracker

## Today's Work
**Date**: [Date]
**Started**: [Time]
**Current Task**: [What you're working on]
**Tags:** [tag1, tag2, tag3]

## Progress Log
- [Time] - [What you did] **Tags:** [tag1, tag2]
- [Time] - [What you did] **Tags:** [tag1, tag2]
- [Time] - [What you did] **Tags:** [tag1, tag2]

## Completed Today
- [ ] [Task 1] - [Notes] **Tags:** [tag1, tag2]
- [ ] [Task 2] - [Notes] **Tags:** [tag1, tag2]

## Left Off At
- [Exactly where you stopped]
- [What you were about to do next]

---
*Update this throughout your work session.*
```

### **PRD.md** - Project Requirements Document
```markdown
# Project Requirements Document

## Vision
**What are we building?**: [Clear description]
**Why are we building it?**: [Purpose and motivation]
**Who is it for?**: [Target users]
**Tags:** [tag1, tag2, tag3]

## Goals
- [Goal 1] **Tags:** [tag1, tag2]
- [Goal 2] **Tags:** [tag1, tag2]
- [Goal 3] **Tags:** [tag1, tag2]

## Success Criteria
- [ ] [Criterion 1] **Tags:** [tag1, tag2]
- [ ] [Criterion 2] **Tags:** [tag1, tag2]
- [ ] [Criterion 3] **Tags:** [tag1, tag2]

## Current Phase
**Phase**: [Setup/Development/Testing/Deployment]
**Focus**: [What we're prioritizing right now]
**Tags:** [tag1, tag2]

---
*This is your project vision. Check alignment before major decisions.*
```

### **ERROR_LOGS.md** - What Went Wrong & Why?
```markdown
# Error Logs

## [Date] - [Error Description]
**What Happened**: [Description]
**Why It Happened**: [Root cause]
**How I Fixed It**: [Solution]
**How to Prevent**: [Prevention strategy]
**Alignment Check**: [Did this affect project vision?]
**Tags:** [bug, urgent, backend, etc.]

## [Date] - [Error Description]
**What Happened**: [Description]
**Why It Happened**: [Root cause]
**How I Fixed It**: [Solution]
**How to Prevent**: [Prevention strategy]
**Alignment Check**: [Did this affect project vision?]
**Tags:** [bug, urgent, backend, etc.]

---
*Log errors immediately. Use for alignment checks.*
```

### **PROJECT_EVOLUTION.md** - How Has the Project Changed?
```markdown
# Project Evolution

## [Date] - [Change Description]
**What Changed**: [What was modified/added/removed]
**Why It Changed**: [Reason for the change]
**Impact on Vision**: [How this affects the original plan]
**New Requirements**: [Any new needs that emerged]
**Tags:** [refactor, feature, scope, etc.]

## [Date] - [Change Description]
**What Changed**: [What was modified/added/removed]
**Why It Changed**: [Reason for the change]
**Impact on Vision**: [How this affects the original plan]
**New Requirements**: [Any new needs that emerged]
**Tags:** [refactor, feature, scope, etc.]

---
*Track how your project evolves from the original vision.*
```

### **PROJECT_FILES.md** - File Reference & CRUD Tracking
```markdown
# Project Files Reference

## Core Workflow Files
- `NEXT_TASK.md` - Current task and priorities
- `TASK_TRACKER.md` - Daily progress tracking
- `PRD.md` - Project vision and requirements
- `ERROR_LOGS.md` - Error tracking and solutions
- `PROJECT_EVOLUTION.md` - Project change history
- `PROJECT_FILES.md` - This file (file reference)

## Project Files
- [List all project files here] **Tags:** [tag1, tag2]

## File Relationships
- [Document how files connect and depend on each other] **Tags:** [tag1, tag2]

## Recent File Changes
- [Date] - [File] - [Action: Created/Modified/Deleted] - [Reason] **Tags:** [tag1, tag2]

---
*This file tracks all project files and their relationships. Update whenever files are created, modified, or deleted.*
```

---

# RULES.md â€“ Workflow & Semantic Tagging Rules

```markdown
# Logger Gen-1 Rules

## 1. Semantic Tagging
- Every entry in NEXT_TASK.md, TASK_TRACKER.md, ERROR_LOGS.md, and PROJECT_EVOLUTION.md should include a **Tags:** field.
- Tags should be short keywords or phrases that describe the context, topic, or type of entry (e.g., `auth`, `bug`, `feature`, `urgent`, `frontend`, `backend`).
- This enables fast searching, filtering, and AI understanding.

## 2. File Creation & CRUD
- Whenever a new file is created, modified, or deleted, update PROJECT_FILES.md and include semantic tags for the file's purpose and relationships.

## 3. PRD Enforcement
- The logger must not proceed unless PRD.md exists and is up to date.

## 4. Flow Logic Enforcement
- Always follow the flow logic as described in the main documentation.
- If a new workflow pattern emerges, add it to this RULES.md file.

---
```

---

## ðŸ”„ **The Workflow in Action**

### **Starting Your Day**
1. **Open NEXT_TASK.md** - See what you should work on
2. **Open TASK_TRACKER.md** - Remember where you left off
3. **Quick PRD check** - Ensure alignment with vision
4. **Start working** - Execute your next task

### **File CRUD Operations**
**When you create a new file:**
1. **Create the file**
2. **Update PROJECT_FILES.md** - Add to "Project Files" section
3. **Update PROJECT_FILES.md** - Add to "Recent File Changes"
4. **Update PROJECT_FILES.md** - Document relationships if any

**When you modify a file:**
1. **Make your changes**
2. **Update PROJECT_FILES.md** - Add to "Recent File Changes"
3. **Update PROJECT_FILES.md** - Update relationships if changed

**When you delete a file:**
1. **Delete the file**
2. **Update PROJECT_FILES.md** - Remove from "Project Files" section
3. **Update PROJECT_FILES.md** - Add to "Recent File Changes"
4. **Update PROJECT_FILES.md** - Remove from relationships

### **During Work**
1. **Update TASK_TRACKER.md** as you progress
2. **Log errors** in ERROR_LOGS.md immediately
3. **Note changes** in PROJECT_EVOLUTION.md if vision shifts
4. **Update PROJECT_FILES.md** when creating/modifying/deleting files
5. **Check alignment** if you feel stuck

### **When You Get Stuck**
1. **Check ERROR_LOGS.md** - Have you seen this before?
2. **Check PROJECT_EVOLUTION.md** - Has the vision changed?
3. **Re-read PRD.md** - Are you still aligned?
4. **Update NEXT_TASK.md** - Adjust priorities if needed

### **End of Day**
1. **Complete TASK_TRACKER.md** - Document where you stopped
2. **Update NEXT_TASK.md** - Set tomorrow's priority
3. **Review alignment** - Are you still on track?

---

## ðŸŽ¯ **Alignment Checks**

### **Before Major Decisions**
- **Check PRD.md** - Does this align with vision?
- **Check ERROR_LOGS.md** - Have we tried this before?
- **Check PROJECT_EVOLUTION.md** - How has the project changed?

### **When Feeling Lost**
- **Re-read PRD.md** - What are we actually building?
- **Check NEXT_TASK.md** - What should I focus on?
- **Review ERROR_LOGS.md** - What patterns am I repeating?

### **When Priorities Feel Wrong**
- **Check PROJECT_EVOLUTION.md** - Has the vision evolved?
- **Update PRD.md** if needed - Is the vision still correct?
- **Adjust NEXT_TASK.md** - Set new priorities

---

## ðŸ¤– **AI Assistant Integration**

### **For Cursor/Claude/GPT**
When working with AI assistants:

1. **Share PRD.md** - Give them your vision
2. **Share NEXT_TASK.md** - Tell them your current focus
3. **Share TASK_TRACKER.md** - Show them where you left off
4. **Share PROJECT_FILES.md** - Show them all project files and relationships
5. **Ask for alignment check** - "Does this align with our vision?"
6. **Update files** based on their suggestions
7. **Update PROJECT_FILES.md** if they suggest new files or changes

### **AI Communication Template**
```
"Here's my project vision (PRD.md), my current task (NEXT_TASK.md), 
where I left off (TASK_TRACKER.md), and all project files (PROJECT_FILES.md). 

Can you help me with [specific question] while ensuring 
we stay aligned with the vision?"
```

---

## ðŸ’¡ **Pro Tips**

### **Keep It Simple**
- **Update TASK_TRACKER.md** every 30 minutes
- **Log errors immediately** - don't wait
- **Check alignment** when you feel stuck
- **Trust the flow** - it works

### **When to Update Each File**
- **NEXT_TASK.md** - When priorities change
- **TASK_TRACKER.md** - Throughout your work session
- **PRD.md** - When vision changes (rarely)
- **ERROR_LOGS.md** - When something breaks
- **PROJECT_EVOLUTION.md** - When requirements change
- **PROJECT_FILES.md** - When files are created, modified, or deleted

### **Signs You're Off Track**
- You haven't checked PRD.md in days
- You're working on tasks not in NEXT_TASK.md
- You keep making the same errors
- You can't remember where you left off

---

## ðŸŒŸ **Why This Works**

### **Clear Decision Points**
- **What to work on** (NEXT_TASK.md)
- **Where you are** (TASK_TRACKER.md)
- **Why you're doing it** (PRD.md)
- **What went wrong** (ERROR_LOGS.md)
- **How things changed** (PROJECT_EVOLUTION.md)

### **Built-in Alignment Checks**
- **Vision alignment** before major decisions
- **Error pattern recognition** to prevent repeats
- **Evolution tracking** to understand changes
- **Progress visibility** to stay motivated

### **AI-Friendly Structure**
- **Clear context** for AI assistants
- **Structured information** they can understand
- **Alignment checks** they can help with
- **Progress tracking** they can reference

---

## ðŸš€ **Get Started Now**

1. **Create the 5 files** using the templates above
2. **Fill out PRD.md** with your project vision
3. **Set your first task** in NEXT_TASK.md
4. **Start working** and follow the flow logic
5. **Trust the system** - it will guide you

---

*This workflow-based intelligence system transforms any project into a guided, aligned, and continuously improving experience.*

**The flow logic creates clear decision points and built-in alignment checks that prevent you from getting lost or working on the wrong things.** 
